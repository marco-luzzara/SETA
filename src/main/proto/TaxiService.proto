syntax = "proto3";
package unimi.dsp.taxi;

import "google/protobuf/empty.proto";

message TaxiAddRequest {
  int32 id = 1;
  string ipAddress = 2;
  int32 port = 3;
  int32 x = 4;
  int32 y = 5;
}

message TaxiAddResponse {
  int32 x = 1;
  int32 y = 2;
}

message TaxiRemoveRequest {
  int32 id = 1;
}

message TaxiNewDistrictRequest {
  int32 id = 1;
  int32 newX = 2;
  int32 newY = 3;
}

message RideElectionIdRequest {
  int32 rideRequestId = 1;
  // I send all ride information because the receiver may have not subscribed in time or did not receive it yet
  int32 startX = 2;
  int32 startY = 3;
  int32 endX = 4;
  int32 endY = 5;
  int32 taxiId = 6;
  double distanceFromSP = 7;
  int32 batteryLevel = 8;
}

message RideElectionConfirmRequest {
  int32 rideRequestId = 1;
  int32 taxiId = 2;
}

message RechargeInfoRequest {
  int32 taxiId = 1;
  int64 rechargeTs = 2;
}

message RechargeInfoResponse {
  bool ok = 1;
}

message RechargeApprovalRequest {
  int32 taxiId = 1;
}

service TaxiService {
  rpc addTaxi(TaxiAddRequest) returns (TaxiAddResponse);
  rpc removeTaxi(TaxiRemoveRequest) returns (google.protobuf.Empty);
  rpc changeRemoteTaxiDistrict(TaxiNewDistrictRequest) returns (google.protobuf.Empty);
  rpc forwardElectionIdOrTakeRide(RideElectionIdRequest) returns (google.protobuf.Empty);
  rpc markElectionConfirmed(RideElectionConfirmRequest) returns (google.protobuf.Empty);
  rpc askRechargeRequestApproval(RechargeInfoRequest) returns (RechargeInfoResponse);
  rpc updateRechargeRequestApproval(RechargeApprovalRequest) returns (google.protobuf.Empty);
}